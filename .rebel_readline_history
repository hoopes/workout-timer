1526949366145:(def x [ {:id 1 :a 2} {:id 2 :a 3}])
1526949380997:(into {} x)
1526949581195:(apply hash-map (interleave (x (map :id x))))
1526949649603:(zipmap (map :id x) x)
1527274690101:(require '[cljs-react-navigation.reagent :as nav])
1527274706451:(doc nav/stack-navigator)
1527274714313:nav/stack-navigator
1527527393982:(require '[workout-timer.db.core :as db])
1527527397644:db/app-db
1527527421733:(keys db/app-db)
1527724253601:(require '[cljs-react-navigation.re-frame :as nav])
1527724261702:nav/navigate
1527724268582:(dir nav)
1527726351320:(require '[workout-timer.views.nav.root :as r])
1527726359359:r/root-stack
1527727026931:(def x {:a 1 :b 2})
1527727029682:(:c x)
1527727995599:(require '[workout-timer.views.nav.root :as r])
1527728000695:(dir r/root-stack)
1527730338950:(seq? [])
1527730346243:(seq? [1])
1527730373619:(empty? [])
1527730383979:(empty? [1])
1527808813511:(uuid)
1527808821006:(doc uuid)
1527808850556:(random-uuid)
1527809171648:(require '[re-frame.db :as db])
1527809175143:db/app-db
1527809180446:@db/app-db
1527809244509:(keyword (random-uuid))
1527809250349:(random-uuid)
1527809257389:(keyword (str (random-uuid)))
1527809310858:@db/app-db
1527813780739:(def x (js/require "react-timeframe"))
1527813782224:x
1527813813102:(require '[reagent.core :as r])
1527813823607:(r/adapt-react-class)
1527813830598:(r/adapt-react-class (:default x))
1527813835190:(:default x)
1527813836046:x
1527813845158:(dir x)
1527813890053:(js->clj x)
1527813910132:(get (js->clj x) "default")
1527813920915:(r/adapt-react-class (get (js->clj x) "default"))
1527948974492:(require '[workout-timer.rn.core :as rn])
1527948984025:rn/TimeFrame
1527949395091:(require '[workout-timer.rn.core :as rn])
1527949397321:rn/TimeFrame
1527957670925:(keys rn/TimeFrame)
1527957687963:rn/Button
1527958488116:(require '[re-frame.core :as rf])
1527958491051:rf/trim-v
1527958608575:(require '[re-frame.db :as db])
1527958611046:db/app-db
1527958616311:@db/app-db
1527959307007:(not nil)
1527961640473:(require '[re-frame.db :as db])
1527961647423:@db/app-db
1527963090138:(require '[re-frame.core :as rf])
1527963094240:rf/dispatch-n
1527963113295:rf/dispatch-later
1527963115959:rf/dispatch
1527963120344:(dir rf)
1527964566938:@db/app-db
1527967906453:(require '[re-frame.db :as db])
1527967910331:@db/app-db
1527967960666:(require '[oops.core :as o])
1527967964634:(def x {})
1527967973049:(def x {:a 1\n   })
1527967975024:x
1527968018985:(o/oset! x "title?" "abc")
1527968061310:(o/oset! (clj->js x) "title?" "abc")
1527968073334:(doc o/oset!)
1527968102988:(o/oset!+ (clj->js x) "title" "abc")
1527968110540:(o/oset!+ (clj->js x) "?title" "abc")
1527968289549:x
1527968307173:(update x :title (fnil % "HEY"))
1527968328276:(update x :title #(fnil % "HEY"))
1527968347315:(update x :title #(if % % "HEY"))
1527968384306:(dir o)
1527968416730:(o/oset! x "title" "A")
1527968446655:(o/oset! (clj->js x) "title" "A")
1527968656047:@db/app-db
1527973589898:(require '[re-frame.db :as db])
1527973592008:@db/app-db
1527973879573:(if (get-in [:edit-workout :workout :exercises] @db/app-db) "YES" "NO")
1527973893356:(get-in [:edit-workout :workout :exercises] @db/app-db)
1527973905172:(get-in [:edit-workout :workout] @db/app-db)
1527973912596:(get-in [:edit-workout] @db/app-db)
1527973924355:(get-in @db/app-db [:edit-workout])
1527973933211:(get-in @db/app-db [:edit-workout :workout :exercises])
1527973946715:(if [(get-in @db/app-db [:edit-workout :workout :exercises]) "YES" "NO")
1527973954706:(if (get-in @db/app-db [:edit-workout :workout :exercises]) "YES" "NO")
1527973975130:(if (not (empty? (get-in @db/app-db [:edit-workout :workout :exercises])))"YES" "NO")
1527973981409:(if (not (empty? (get-in @db/app-db [:edit-workout :workout :exercises]))) "YES" "NO")
1527975205545:@db/app-db
1527975217889:(:exercises @db/app-db)
1527975748028:@db/app-db
1528049871053:(:exercises @db/app-db)
1528049874741:@db/app-db
1528051226466:(require '[workout-timer.components.nav.root :as nav])
1528051233593:(def x nav/root-stack)
1528051237058:(dir x)
1528051238888:x
1528051246977:x/navigate!
1528051260801:(clj->js x)
1528051266281:(type x)
1528051301790:(require '[cljs-react-navigation.re-frame :as n])
1528051312952:(n/stack-navigator {} {})
1528051339422:(n/stack-navigator {:Main {}\n            } {})
1528051656579::repl/help
1528051705875:(n/stack-navigator {:Main {}} {})e
1528051712823:(require '[cljs-react-navigation.re-frame :as n])
1528051714801:(n/stack-navigator {:Main {}} {})e
1528051717992:(n/stack-navigator {:Main {}} {})
1528051734951:(n/stack-navigator {:Main {:screen nil}} {})
1528051768549:(require '[workout-timer.components.nav.root :as nav])
1528051774253:nav/root-stack
1528051827829:(require '[workout-timer.ios.core :as c])
1528051831315:c/app-root
1528051840835:c/root-component
1528052484101:(require '[clojure.spec.alpha :as s])
1528053413001:(require '[re-frame.db :as db])
1528053415631:@db/app-db
1528053816596:(def x nav/root-stack)
1528053822411:(require '[workout-timer.components.nav.root :as nav])
1528053831643:(def x nav/root-stack)
1528053846419:(.-router x)
1528232541828:(.-dispatch x)
1528232547002:x/dispatch
1528232600527:x
1528232604649:(clj->js x)
1528232611943:(dir (clj->js x))
1528493694970:(require '[workout-timer.components.nav.root :as nav])
1528493734649:(def x nav/routing-root)
1528493735407:x
1528493753855:(aget x "router")
1528493756573:x
1528493789709:(def x nav/root-stack)
1528493790996:x
1528493793973:(aget x "router")
1528493809861:(aget x "router" "getStateForAction")
1528493844436:(require '[cljs-react-navigation.re-frame :as n])
1528493858241:n/ref-getStateForAction
1528499544480:(require '[re-frame.core :as rf])
1528499600983:(rf/dispatch :workout-timer.nav.re-frame/navigate
1528499626299:(rf/dispatch [:workout-timer.nav.re-frame/navigate])
1528499727829:(rf/dispatch [:workout-timer.nav.re-frame/navigate "WorkoutMain"])
1528499745657:(rf/dispatch [:workout-timer.nav.re-frame/navigate "ConfigWorkout"])
1528499755416:(rf/dispatch [:workout-timer.nav.re-frame/navigate "WorkoutMain"])
1528499775176:(rf/dispatch [:workout-timer.nav.re-frame/navigate :ConfigWorkout])
1528499778960:(rf/dispatch [:workout-timer.nav.re-frame/navigate "ConfigWorkout"])
1528499822403:(rf/dispatch [:workout-timer.nav.re-frame/navigate "WorkoutMain"])
1528499824929:(rf/dispatch [:workout-timer.nav.re-frame/navigate "ConfigWorkout"])
1528499826466:(rf/dispatch [:workout-timer.nav.re-frame/navigate "WorkoutMain"])
1528499829921:(rf/dispatch [:workout-timer.nav.re-frame/navigate "ConfigWorkout"])
1528499831258:(rf/dispatch [:workout-timer.nav.re-frame/navigate "WorkoutMain"])
1528499857262:(require '[re-frame.db :as app-db])
1528499862300:@app-db/db
1528499866540:app-db
1528499877844:(dir app-db)
1528499884724:(require '[re-frame.db :as db])
1528499889243:@db/app-db
1528499911574:(clj->js @db/app-db)
1528500326181:(js->clj (:routing @db/app-db))
1528500334195:(rf/dispatch [:workout-timer.nav.re-frame/navigate "ConfigWorkout"])
1528500337226:(js->clj (:routing @db/app-db))
1528500494835:(rf/dispatch [:workout-timer.nav.re-frame/navigate "ConfigWorkout"])
1528500496714:(js->clj (:routing @db/app-db))
1528500523571:(rf/dispatch [:workout-timer.nav.re-frame/navigate "WorkoutMain"])
1528500525354:(js->clj (:routing @db/app-db))
1528500586054:(rf/dispatch [:workout-timer.nav.re-frame/goBack])
1528500588180:(js->clj (:routing @db/app-db))
1528500591494:(rf/dispatch [:workout-timer.nav.re-frame/goBack])
1528500593333:(js->clj (:routing @db/app-db))
1528500596173:(rf/dispatch [:workout-timer.nav.re-frame/goBack])
1528500597668:(js->clj (:routing @db/app-db))
1528500865807:(rf/dispatch [:workout-timer.nav.re-frame/navigate "ConfigWorkout"])
1528548074634:(js->clj (:routing @db/app-db))
1528548114709:(rf/dispatch [:workout-timer.nav.re-frame/navigate "ConfigWorkout"])
1528548119981:(js->clj (:routing @db/app-db))
1528548138228:(rf/dispatch [:workout-timer.nav.re-frame/navigate "ConfigWorkout"])
1528550385235:(js->clj (:routing @db/app-db))
1528551062907:(require '[re-frame.db :as db])
1528551064658:(js->clj (:routing @db/app-db))
1528551481411:(def r (js->clj (:routing @db/app-db)))
1528551482346:r
1528551488395:(keys r)
1528551502442:(get "index" r)
1528551509610:(get r "index")
1528551536169:(get-in r ["routes" 0])
1528552024751:(require '[re-frame.db :as db])
1528552042381:(require '[workout-timer.components.root :as r])
1528552061364:(def routes (:routing @db/app-db))
1528552063028:routes
1528552073645:(def routes (js->clj (:routing @db/app-db)))
1528552075314:routes
1528552085060:(r/cr routes)
1528552149408:(r/cr routes 0)
1528552252447:(require '[re-frame.db :as db])
1528552259507:(require '[workout-timer.components.root :as r])
1528552265277:(def routes (js->clj (:routing @db/app-db)))
1528552267516:(r/cr routes 0)
1528552279243:r/cr
1528552309282:routes
1528552590033:(r/cr routes 0)
1528552727254:(require '[re-frame.db :as db])
1528552731246:(require '[workout-timer.components.root :as r])
1528552734942:(def routes (js->clj (:routing @db/app-db)))
1528552737333:(r/cr routes 0)
1528552887246:routes
1528552891208:(def routes (js->clj (:routing @db/app-db)))
1528552892431:routes
1528552894983:(r/cr routes 0)
1528553456929:(js->clj (:routing @db/app-db))
1528578340424:(require '[workout-timer.nav.re-frame :as n])
1528578348748:::n/navigate
1528579478186:(require '[re-frame.core :as rf])
1528579507176:(rf/dispatch [::n/navigate "ConfigWorkout"])
1528579626315:(into {} nil)
1528580026960:(require '[re-frame.app-db :as db])
1528580035769:@db/app-db
1528580309476:(require '[workout-timer.nav.re-frame :as nav])
1528580315586:(require '[re-frame.core :as rf])
1528580336106:(rf/dispatch [::nav/navigate "ConfigWorkout"])
1528580885720:@db/app-db
1528580892457:db
1528580901705:(require '[re-frame.app-db :as db])
1528581278849:(require '[re-frame.db :as db])
1528581285040:@db/app-db
1528582745849:(js->clj (:routing @db/app-db))
1528659205828:(require '[re-frame.db :as db])
1528659208843:@db/app-db
1528661223402:(def x {:app-initialized false, :exercises {}, :current-exercise nil, :workouts {:6d303342-b2bb-43c5-828a-68e09480f9d5 {:title "A", :id :6d303342-b2bb-43c5-828a-68e09480f9d5, :total-length 20, :seconds-per-exercise 60, :initial-rest 15, :final-rest 45, :exercises []}}, :current-workout nil, :routing #js {:index 0, :routes #js [#js {:routes #js [#js {:index 2, :routes #js [#js {:routeName "ConfigList", :key "ConfigList"} #js {:routeName "ConfigWorkout", :key "ConfigWorkout"} #js {:params nil, :routeName "ConfigWorkout", :key "id-1528661206259-0"}], :key "ConfigTab", :routeName "ConfigTab", :isTransitioning false} #js {:index 0, :routes #js [#js {:routeName "WorkoutMain", :key "WorkoutMain"}], :key "WorkoutTab", :routeName "WorkoutTab"}], :index 0, :key "Main", :routeName "Main"}]}, :edit-workout nil})
1528661224161:x
1528661243746:(select-keys x [:current-workout])
1528661264625:(require '[workout-timer.events.core :as c])
1528661272655:(select-keys x c/storage-keys)
1528661279400:c/storage-keys
1528661730775:@db/app-db
1528842340759:(require '[re-frame.db :as db])
1528842344604:db/app-db
1528842349676:@db/app-db
1528842375033:(require '[com.rpl.specter :as ])
1528842379511:(require '[com.rpl.specter :as s])
1528842405585:(s/setval)
1528842444792:(s/setval [:workouts :5c760214-e7d0-4a03-a37d-100ba3f3de59] s/NONE @db/app-db)
1528843269643:(require '[re-frame.db :as db])
1528843273162:@db/app-db
1529098279922:(require '[re-frame.db :as db])
1529098283216:@db/app-db
1529098304281:(js->clj (:routing @db/app-db))
1529098443723:(require '[re-frame.core :as rf])
1529098465545:(require '[workout-timer.nav.re-frame :as nav])
1529098501624:(rf/dispatch [::nav/navigate "ConfigWorkout"])
1529098516111:(js->clj (:routing @db/app-db))
1529098965300:@db/app-db
1529099043322:(keys (:exercises @db/app-db))
1529099052585:(def x (keys (:exercises @db/app-db)))
1529099053817:x
1529099088376:(repeatedly 10 #(rand-nth x))
1529099152301:@db/app-db
1529099971708:(js->clj (:routing @db/app-db))
1529116409144:@db/app-db
1529116530474:(get-in @db/app-db [:current-workout])
1529116539488:(get-in @db/app-db [:current-workout :id])
1529116708153:(def x {:app-initialized false, :exercises {:russian-twists {:id :russian-twists, :title "Russian Twists", :description "Sit on the floor, with your heels touching the floor or lifted (more advanced) and your hands at your chest. Twist from side to side.", :category :core}, :twisting-push-ups {:id :twisting-push-ups, :title "Twisting Push-ups", :description "Body weight push ups, twist at the top.", :category :strength}, :shoulder-presses {:id :shoulder-presses, :title "Shoulder presses", :description "Dumbbell shoulder presses", :category :strength}, :dumbbell-rows {:id :dumbbell-rows, :title "Dumbbell rows", :description "Dumbbell shoulder rows", :category :strength}, :plyo-lunges {:id :plyo-lunges, :title "Plyo Lunges", :description "Plyometric lunges, jumping and switching feet.", :category :cardio}, :squat-thrusts {:id :squat-thrusts, :title "Squat Thrusts", :description "From standing position, drop hands to the floor and kick feet back, so you're in plank position. Hop your feet back to center and return to standing.", :category :cardio}, :burpees {:id :burpees, :title "Burpees", :description "Start standing. Place your hands on the ground, wrists underneath shoulders and jump your feet back to high plank position. Drop your chest to the ground. Then, without arching your back, push yourself back up and jump your feet back up to your hands. Explode off the ground to perform a hop at the top.", :category :cardio}, :jumping-jacks {:id :jumping-jacks, :title "Jumping Jacks", :description "Standard jumping jacks, fast.", :category :core}, :hand-release-push-ups {:id :hand-release-push-ups, :title "Hand Release Push Ups", :description "Start in a standard push-up position, and drop your body all the way down to the floor. Lift your hands off the ground for a second, then exhale while you press your body all the way back up. If you need to modify this move, just drop to your knees.", :category :strength}, :supermans {:id :supermans, :title "Supermans", :description "Lie on belly, with hands either over head, to side, or behind. Lift arms, head, and legs as high as possible from the ground.", :category :core}, :flutter-kicks {:id :flutter-kicks, :title "Flutter Kicks", :description "Lie on your back with your hands behind your head, holding your head and shoulders up off the floor. Keeping your legs long and straight, bring one leg into the air while the other hovers parallel to the ground. Keep switching legs continuously.", :category :core}, :plyo-push-ups {:id :plyo-push-ups, :title "Plyo Push-Ups", :description "Start in push-up position, and lower your body to the floor. Get a big push off the floor and lift your hands off the ground before landing back in push-up position. To modify, drop to your knees.", :category :strength}, :planks {:id :planks, :title "Planks", :description "Standard planks", :category :core}, :tuck-ups {:id :tuck-ups, :title "Tuck-Ups", :description "Lie on your back with arms straight over your head. Crunch your legs into your chest as you lift your back off the floor. Grab your legs, balancing on your glutes. Return to starting position and repeat.", :category :core}, :resistance-band-pulldowns {:id :resistance-band-pulldowns, :title "Resistance Band Pulldowns", :description "", :category :strength}, :lateral-lunges-with-hops {:id :lateral-lunges-with-hops, :title "Lateral Lunges with Hops", :description "Step your left leg out to your side for a lateral lunge, keeping your right leg straight. Bring left leg up to a 90-degree angle and hop on your right leg. Repeat on each side.", :category :cardio}, :mountain-climbers {:id :mountain-climbers, :title "Mountain Climbers", :description "Standard mountain climbers", :category :core}, :bicycle-crunches {:id :bicycle-crunches, :title "Bicycle Crunches", :description "Standard bicycle crunches.", :category :core}, :push-ups {:id :push-ups, :title "Push-ups", :description "Body weight push ups.", :category :strength}, :curls {:id :curls, :title "Curls", :description "Dumbbell Curls", :category :strength}, :stiff-zombie {:id :stiff-zombie, :title "Stiff Zombie", :description "Stiff arms and legs, walk like a zombie, alternating strides.", :category :core}, :squats {:id :squats, :title "Squats", :description "Body weight squats", :category :strength}, :plank-jacks {:id :plank-jacks, :title "Plank Jacks", :description "Start in low plank position with feet hip-width apart. Hop your feet out wider than hip-width, and then hop back to the starting position. Keep your abs tight and don't allow your butt to pop up above the height of your shoulders.", :category :core}}, :current-exercise nil, :workouts {:d2461e3b-9dec-4f30-8a9d-013b6e1d8ce9 {:title "AAA", :id :d2461e3b-9dec-4f30-8a9d-013b6e1d8ce9, :total-length 20, :seconds-per-exercise 60, :initial-rest 15, :final-rest 45, :exercises []}}, :current-workout {:id :d2461e3b-9dec-4f30-8a9d-013b6e1d8ce9, :exercises (:tuck-ups :squats :stiff-zombie :mountain-climbers :bicycle-crunches :plyo-push-ups :bicycle-crunches :hand-release-push-ups :supermans :twisting-push-ups)}, :routing #js {:index 0, :routes #js [#js {:routes #js [#js {:index 0, :routes #js [#js {:routeName "ConfigList", :key "ConfigList"}], :key "ConfigTab", :routeName "ConfigTab"} #js {:index 1, :routes #js [#js {:routeName "WorkoutMain", :key "WorkoutMain"} #js {:params nil, :routeName "WorkoutMain", :key "id-1529116692243-0"}], :key "WorkoutTab", :routeName "WorkoutTab", :isTransitioning true}], :index 1, :key "Main", :routeName "Main"}]}})
1529151894839:@db/app-db
1529151928880:(def ex-keys (:burpees :plyo-lunges :curls :planks :bicycle-crunches :bicycle-crunches :shoulder-presses :bicycle-crunches :flutter-kicks :tuck-ups))
1529151942741:(def ex-keys '(:burpees :plyo-lunges :curls :planks :bicycle-crunches :bicycle-crunches :shoulder-presses :bicycle-crunches :flutter-kicks :tuck-ups))
1529151984842:(map ex-keys #(get-in @db/app-db [:exercises %]))
1529152005737:(map ex-keys identity)
1529152014985:ex-keys
1529152022242:(type ex-keys)
1529152061520:(map (vector ex-keys) identity)
1529152087247:(map #(get-in @db/app-db [:exercises %]) ex-keys)
